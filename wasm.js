// deno-lint-ignore-file
// deno-fmt-ignore-file
import*as A from"https://deno.land/x/lz4@v0.1.2/mod.ts";export const source=A.decompress(Uint8Array.from(atob("8AsAYXNtAQAAAAEXBGACf38Bf2AEf39/fwBgAQwA8IABfwADCgkAAQEAAAICAAMEBQFwAQgIBQMBABEGCQF/AUGAgMAACwcQAgZtZW1vcnkCAANhZGQAAwkNAQBBAQsHCAIEBQEHBgrrBwnOBAEHfyABKAIAIgIEQCAAQQJ0IQcDQCACQQhqIQQCQCACKAIIIgZBAXFFBEAgAiEDDAELA0AgBCAGQX5xNgIAAn9BACQA8g0EIgZBfHEiBEUNABpBACAEIAQtAABBAXEbCyEDRgAwACIIIgDhBUUNAEEAIAUgCEECcRsPAPABIAUgBSgCBEEDcSAEcjYCBC4AAlAAkCEECyACIAQEf1EAMCgCACMAAEsAYkF8cXI2AnkAcQUgBgtBA3E4AAARADEAIgIPAMAAIAJBAnEEQCADIAMzABACMgBQCyABIAMcABED4AA1IAMi4ABiDQALCwJALABBfHEiAiMA8A4iBWsgB0kNAAJAIAVBsIDAACAAQcCAwAAoAgARAC0BkWpBCGogAiAHazQAIEsEKABxA3ENAiABILEAEXyKAAODABABgwCwIAMhAgwBCyACQQAOAJACQXhqIgJCADcMAAInAAE0AAOLACAiAVkAEgA1ATEAIAE1AQAPAEMgACAANQEA2gABKQEADwEAEQAQAxEABDMBAacBA4IAICIBHwAwAnIiewAhAkBPAAHYATEoAgDbAWEgAyAAQX0yAAFPAAA3ARAiMQEAXwASA8EAALsAMQhqD0sBAD0BEQIuAAA/AfABQQALjAIBA38jAEEQayIDJHcAAVsCAIkAUDYCDAJ/CwLgQQJqIgEgAWwiAUGAECAFAKJLGyIFIANBDGoQhgIQBFkAEAxXAIAFQQJ0IQYMAZoBAAwAcSIGQaCAASAGANBLG0GHgARqIgJBEHZA2wAwf0cE0wBAEHQiAVwBEgShAPIBDDYCCCABIAEgAkGAgHxxagkCAJoARDYCDCB4ACchAnYAIQINogEFEQBwC0EAIQJBARQAAaoBAWoCIyAGSwCQQQALIQEgACACcwAQAFcA0AAgA0EQaiQAC2oAAn/xAOB0IgEgA0EDdEGAgAFqIh0CFAK+ABIBvgCjAkF/RgRAQQAhA2gAAMcAEgNtABADrQAIvQAAcgAwAiAAygIAcgAAgQEgCwcSAqABagsFAEGABAsE6AMQBCkA0gQAIAELAwABCwtOAQAZBBBFWgQAAQAACACxAgAAAAMAAAAEAAAQAAAIAAAEAJMFAAAABgAAAAcYAAABAAAIAAYwAPBtewlwcm9kdWNlcnMCCGxhbmd1YWdlAQRSdXN0AAxwcm9jZXNzZWQtYnkDBXJ1c3RjHTEuNjAuMCAoNzczN2UwYjVjIDIwMjItMDQtMDQpBndhbHJ1cwYwLjE4LjAMd2FzbS1iaW5kZ2VuEjAuMi42OCAoYTA0ZTE4OTcxKQ=="),A=>A.charCodeAt(0)));let t;export function add(A,B){return t.add(A,B)}async function B(A,t){if("function"==typeof Response&&A instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(A,t)}catch(t){if("application/wasm"==A.headers.get("Content-Type"))throw t;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",t)}const B=await A.arrayBuffer();return await WebAssembly.instantiate(B,t)}{const B=await WebAssembly.instantiate(A,t);return B instanceof WebAssembly.Instance?{instance:B,module:A}:B}}async function e(A){void 0===A&&(A=import.meta.url.replace(/\.js$/,"_bg.wasm"));("string"==typeof A||"function"==typeof Request&&A instanceof Request||"function"==typeof URL&&A instanceof URL)&&(A=fetch(A));const{instance:E,module:n}=await B(await A,{});return t=E.exports,e.__wbindgen_wasm_module=n,t}export default e;